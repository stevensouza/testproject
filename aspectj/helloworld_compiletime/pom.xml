<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.stevesouza</groupId>
  <artifactId>aspectj_helloworld_woven</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>aspectj_helloworld_woven</name>
    <description>Weave the library created with aspectj_compiletime with the HelloWorld class generated
        in aspectj_helloworld_woven.  This approach is what users could do to combine their generated library with
        the aspect.
    </description>
  <url>http://maven.apache.org</url>

  <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <jdk.version>1.8</jdk.version>
      <metrics.version>3.0.1</metrics.version>
      <jamonapi.version>2.81</jamonapi.version>
      <assertj.version>1.7.0</assertj.version>
      <aspectj.version>1.8.2</aspectj.version>
      <mojo.ajc.version>1.7</mojo.ajc.version>
      <mojo.execution.version>1.3.2</mojo.execution.version>
  </properties>

    <build>
        <plugins>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>${mojo.ajc.version}</version>

                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>       <!-- use this goal to weave all your main classes -->
                            <!-- <goal>test-compile</goal>  --> <!-- use this goal to weave all your test classes -->
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- because this project has no sources it is required that forceAjcCompile is true.
                    Alternatively having one dummy class works. -->
                    <forceAjcCompile>true</forceAjcCompile>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <complianceLevel>${jdk.version}</complianceLevel>

                        <aspectLibraries>
                            <aspectLibrary>
                                <groupId>com.stevesouza</groupId>
                                <artifactId>aspectj_compiletime</artifactId>
                            </aspectLibrary>
                        </aspectLibraries>
                    <weaveDependencies>

                        <weaveDependency>
                            <groupId>com.stevesouza</groupId>
                            <artifactId>aspectj_helloworld</artifactId>
                        </weaveDependency>
                    </weaveDependencies>

                </configuration>



            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${mojo.execution.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>

                    </execution>
                </executions>
                <configuration>
                    <!-- generates class path with all dependencies as well as generated class -->
                    <classpathScope>runtime</classpathScope>
                    <mainClass>com.stevesouza.helloworld.helloworld.HelloWorld</mainClass>
                </configuration>
            </plugin>
    <!-- The Surefire Plugin is used during the test phase of the build lifecycle to execute the unit tests of an application. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
            </plugin>
        </plugins>
    </build>

  <dependencies>

      <dependency>
          <groupId>com.stevesouza</groupId>
          <artifactId>aspectj_helloworld</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>

      <dependency>
          <groupId>com.stevesouza</groupId>
          <artifactId>aspectj_compiletime</artifactId>
          <version>1.0-SNAPSHOT</version>
      </dependency>

      <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjrt</artifactId>
          <version>${aspectj.version}</version>
      </dependency>

      <dependency>
          <groupId>com.jamonapi</groupId>
          <artifactId>jamon</artifactId>
          <version>${jamonapi.version}</version>
      </dependency>

      <dependency>
          <groupId>org.assertj</groupId>
          <artifactId>assertj-core</artifactId>
          <version>${assertj.version}</version>
          <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>pl.pragmatists</groupId>
          <artifactId>JUnitParams</artifactId>
          <version>1.0.2</version>
          <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-all</artifactId>
          <version>1.9.5</version>
          <scope>test</scope>
      </dependency>

       <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.11</version>
         <scope>test</scope>
       </dependency>

      <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>1.2.15</version>
          <exclusions>
              <exclusion>
                  <groupId>com.sun.jdmk</groupId>
                  <artifactId>jmxtools</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>com.sun.jmx</groupId>
                  <artifactId>jmxri</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>javax.jms</groupId>
                  <artifactId>jms</artifactId>
              </exclusion>
          </exclusions>
      </dependency>

  </dependencies>
</project>
